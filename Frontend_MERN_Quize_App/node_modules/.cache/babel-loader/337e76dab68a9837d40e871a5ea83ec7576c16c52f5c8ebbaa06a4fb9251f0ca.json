{"ast":null,"code":"import * as types from \"./actiontype.js\";\nconst init = {\n  loading: false,\n  userId: null,\n  adminId: null,\n  adminName: null,\n  error: \"\",\n  userName: null,\n  quizTitle: \"\",\n  QuizData: [],\n  result: [],\n  questions: [],\n  Alluser: [],\n  // Store all user data here\n  ans: []\n};\nexport const QuizReducer = (state = init, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case types.GET_ALL_USER_DATA_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n    case types.GET_ALL_USER_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        Alluser: payload // Update the state with fetched user data\n      };\n    case types.GET_ALL_USER_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      };\n    default:\n      return state;\n  }\n};\n_c = QuizReducer;\nvar _c;\n$RefreshReg$(_c, \"QuizReducer\");","map":{"version":3,"names":["types","init","loading","userId","adminId","adminName","error","userName","quizTitle","QuizData","result","questions","Alluser","ans","QuizReducer","state","action","type","payload","GET_ALL_USER_DATA_REQUEST","GET_ALL_USER_DATA_SUCCESS","GET_ALL_USER_DATA_FAILURE","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Redux/reducer.js"],"sourcesContent":["import * as types from \"./actiontype.js\";\n\nconst init = {\n  loading: false,\n  userId: null,\n  adminId: null,\n  adminName: null,\n  error: \"\",\n  userName: null,\n  quizTitle: \"\",\n  QuizData: [],\n  result: [],\n  questions: [],\n  Alluser: [], // Store all user data here\n  ans: [],\n};\n\nexport const QuizReducer = (state = init, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case types.GET_ALL_USER_DATA_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\",\n      };\n    case types.GET_ALL_USER_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        Alluser: payload, // Update the state with fetched user data\n      };\n    case types.GET_ALL_USER_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,iBAAiB;AAExC,MAAMC,IAAI,GAAG;EACXC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE,IAAI;EACbC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,EAAE;EAAE;EACbC,GAAG,EAAE;AACP,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGd,IAAI,EAAEe,MAAM,KAAK;EACnD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKjB,KAAK,CAACmB,yBAAyB;MAClC,OAAO;QACL,GAAGJ,KAAK;QACRb,OAAO,EAAE,IAAI;QACbI,KAAK,EAAE;MACT,CAAC;IACH,KAAKN,KAAK,CAACoB,yBAAyB;MAClC,OAAO;QACL,GAAGL,KAAK;QACRb,OAAO,EAAE,KAAK;QACdI,KAAK,EAAE,EAAE;QACTM,OAAO,EAAEM,OAAO,CAAE;MACpB,CAAC;IACH,KAAKlB,KAAK,CAACqB,yBAAyB;MAClC,OAAO;QACL,GAAGN,KAAK;QACRb,OAAO,EAAE,KAAK;QACdI,KAAK,EAAEY;MACT,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAACO,EAAA,GA1BWR,WAAW;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}