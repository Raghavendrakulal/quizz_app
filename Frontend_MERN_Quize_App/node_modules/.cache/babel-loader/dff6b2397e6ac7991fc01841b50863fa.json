{"ast":null,"code":"// import * as types from \"./actiontype.js\";\n\n// const init = {\n//   loading: false,\n//   userId: null,\n//   adminId: null,\n//   adminName: null,\n//   error: \"\",\n//   userName: null,\n//   quizTitle: \"\",\n//   QuizData: [],\n//   result: [],\n//   questions: [],\n//   Alluser: [],\n//   ans: [],\n// };\n\n// export const QuizReducer = (state = init, action) => {\n//   const { type, payload } = action;\n\n//   switch (type) {\n//     case types.CREATE_QUIZ_SUCCESS:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: false,\n//         questions: [...state.questions, payload],\n//       };\n//     case types.FETCH_QUIZ_REQUEST:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: true,\n//       };\n//     case types.FETCH_QUIZ_SUCCESS:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: false,\n//         QuizData: payload,\n//       };\n//     case types.FETCH_QUIZ_FAILURE:\n//       return {\n//         ...state,\n//         error: payload,\n//         loading: false,\n//       };\n//     case types.GET_CURRENT_QUIZ_REQUEST:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: true,\n//       };\n//     case types.GET_CURRENT_QUIZ_SUCCESS:\n//       return {\n//         ...state,\n//         currentQuiz: payload,\n//         error: \"\",\n//         loading: false,\n//       };\n//     case types.GET_CURRENT_QUIZ_FAILURE:\n//       return {\n//         ...state,\n//         error: payload,\n//         loading: false,\n//       };\n\n//     case types.GETUSERID:\n//       return {\n//         ...state,\n//         userId: payload,\n//       };\n\n//     case types.GETUSERNAME:\n//       return {\n//         ...state,\n//         userName: payload,\n//       };\n//     case types.LOGOUTUSER:\n//       return {\n//         ...state,\n//         userId: null,\n//         userName: null,\n//         adminName: null,\n//         adminId: null,\n//       };\n//     case types.GETADMINID:\n//       return {\n//         ...state,\n//         adminId: payload,\n//         userId: null,\n//         userName: null,\n//       };\n//     //username\n//     case types.GETADMINNAME:\n//       return {\n//         ...state,\n//         adminName: payload,\n//         userId: null,\n//         userName: null,\n//       };\n\n//     case types.GET_ALL_USER_DATA_REQUEST:\n//       return {\n//         ...state,\n//         loading: true,\n//         error: \"\",\n//       };\n//     case types.GET_ALL_USER_DATA_SUCCESS:\n//       return {\n//         ...state,\n//         loading: false,\n//         error: \"\",\n//         Alluser: payload,\n//       };\n//     case types.GET_ALL_USER_DATA_FAILURE:\n//       return {\n//         ...state,\n//         loading: false,\n//         error: payload,\n//       };\n//     case types.POST_USER_RESULT_SUCCESS:\n//       return {\n//         ...state,\n//         isLoading: false,\n//         isError: false,\n//         user: payload,\n//       };\n//     case types.SET_USER_RESULT_SUCCESS:\n//       return {\n//         ...state,\n//         isLoading: false,\n//         isError: false,\n//         result: payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nimport * as types from \"./actiontype.js\";\nconst init = {\n  loading: false,\n  userId: null,\n  adminId: null,\n  adminName: null,\n  error: \"\",\n  userName: null,\n  quizTitle: \"\",\n  QuizData: [],\n  result: [],\n  questions: [],\n  Alluser: [],\n  ans: []\n};\nexport const QuizReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case types.CREATE_QUIZ_SUCCESS:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        questions: [...state.questions, payload]\n      };\n    case types.FETCH_QUIZ_REQUEST:\n      return {\n        ...state,\n        error: \"\",\n        loading: true\n      };\n    case types.FETCH_QUIZ_SUCCESS:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        QuizData: payload\n      };\n    case types.FETCH_QUIZ_FAILURE:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case types.GET_CURRENT_QUIZ_REQUEST:\n      return {\n        ...state,\n        error: \"\",\n        loading: true\n      };\n    case types.GET_CURRENT_QUIZ_SUCCESS:\n      return {\n        ...state,\n        currentQuiz: payload,\n        error: \"\",\n        loading: false\n      };\n    case types.GET_CURRENT_QUIZ_FAILURE:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case types.GETUSERID:\n      return {\n        ...state,\n        userId: payload\n      };\n    case types.GETUSERNAME:\n      return {\n        ...state,\n        userName: payload\n      };\n    case types.LOGOUTUSER:\n      return {\n        ...state,\n        userId: null,\n        userName: null,\n        adminName: null,\n        adminId: null\n      };\n    case types.GETADMINID:\n      return {\n        ...state,\n        adminId: payload,\n        userId: null,\n        userName: null\n      };\n    case types.GETADMINNAME:\n      return {\n        ...state,\n        adminName: payload,\n        userId: null,\n        userName: null\n      };\n    case types.GET_ALL_USER_DATA_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n    case types.GET_ALL_USER_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        Alluser: payload\n      };\n    case types.GET_ALL_USER_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      };\n    case types.POST_USER_RESULT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        user: payload\n      };\n    case types.SET_USER_RESULT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        result: payload\n      };\n    default:\n      return state;\n  }\n};\n_c = QuizReducer;\nvar _c;\n$RefreshReg$(_c, \"QuizReducer\");","map":{"version":3,"names":["types","init","loading","userId","adminId","adminName","error","userName","quizTitle","QuizData","result","questions","Alluser","ans","QuizReducer","state","arguments","length","undefined","action","type","payload","CREATE_QUIZ_SUCCESS","FETCH_QUIZ_REQUEST","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_FAILURE","GET_CURRENT_QUIZ_REQUEST","GET_CURRENT_QUIZ_SUCCESS","currentQuiz","GET_CURRENT_QUIZ_FAILURE","GETUSERID","GETUSERNAME","LOGOUTUSER","GETADMINID","GETADMINNAME","GET_ALL_USER_DATA_REQUEST","GET_ALL_USER_DATA_SUCCESS","GET_ALL_USER_DATA_FAILURE","POST_USER_RESULT_SUCCESS","isLoading","isError","user","SET_USER_RESULT_SUCCESS","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Redux/reducer.js"],"sourcesContent":["// import * as types from \"./actiontype.js\";\n\n// const init = {\n//   loading: false,\n//   userId: null,\n//   adminId: null,\n//   adminName: null,\n//   error: \"\",\n//   userName: null,\n//   quizTitle: \"\",\n//   QuizData: [],\n//   result: [],\n//   questions: [],\n//   Alluser: [],\n//   ans: [],\n// };\n\n// export const QuizReducer = (state = init, action) => {\n//   const { type, payload } = action;\n\n//   switch (type) {\n//     case types.CREATE_QUIZ_SUCCESS:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: false,\n//         questions: [...state.questions, payload],\n//       };\n//     case types.FETCH_QUIZ_REQUEST:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: true,\n//       };\n//     case types.FETCH_QUIZ_SUCCESS:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: false,\n//         QuizData: payload,\n//       };\n//     case types.FETCH_QUIZ_FAILURE:\n//       return {\n//         ...state,\n//         error: payload,\n//         loading: false,\n//       };\n//     case types.GET_CURRENT_QUIZ_REQUEST:\n//       return {\n//         ...state,\n//         error: \"\",\n//         loading: true,\n//       };\n//     case types.GET_CURRENT_QUIZ_SUCCESS:\n//       return {\n//         ...state,\n//         currentQuiz: payload,\n//         error: \"\",\n//         loading: false,\n//       };\n//     case types.GET_CURRENT_QUIZ_FAILURE:\n//       return {\n//         ...state,\n//         error: payload,\n//         loading: false,\n//       };\n\n//     case types.GETUSERID:\n//       return {\n//         ...state,\n//         userId: payload,\n//       };\n\n//     case types.GETUSERNAME:\n//       return {\n//         ...state,\n//         userName: payload,\n//       };\n//     case types.LOGOUTUSER:\n//       return {\n//         ...state,\n//         userId: null,\n//         userName: null,\n//         adminName: null,\n//         adminId: null,\n//       };\n//     case types.GETADMINID:\n//       return {\n//         ...state,\n//         adminId: payload,\n//         userId: null,\n//         userName: null,\n//       };\n//     //username\n//     case types.GETADMINNAME:\n//       return {\n//         ...state,\n//         adminName: payload,\n//         userId: null,\n//         userName: null,\n//       };\n\n//     case types.GET_ALL_USER_DATA_REQUEST:\n//       return {\n//         ...state,\n//         loading: true,\n//         error: \"\",\n//       };\n//     case types.GET_ALL_USER_DATA_SUCCESS:\n//       return {\n//         ...state,\n//         loading: false,\n//         error: \"\",\n//         Alluser: payload,\n//       };\n//     case types.GET_ALL_USER_DATA_FAILURE:\n//       return {\n//         ...state,\n//         loading: false,\n//         error: payload,\n//       };\n//     case types.POST_USER_RESULT_SUCCESS:\n//       return {\n//         ...state,\n//         isLoading: false,\n//         isError: false,\n//         user: payload,\n//       };\n//     case types.SET_USER_RESULT_SUCCESS:\n//       return {\n//         ...state,\n//         isLoading: false,\n//         isError: false,\n//         result: payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport * as types from \"./actiontype.js\";\n\nconst init = {\n  loading: false,\n  userId: null,\n  adminId: null,\n  adminName: null,\n  error: \"\",\n  userName: null,\n  quizTitle: \"\",\n  QuizData: [],\n  result: [],\n  questions: [],\n  Alluser: [],\n  ans: [],\n};\n\nexport const QuizReducer = (state = init, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case types.CREATE_QUIZ_SUCCESS:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        questions: [...state.questions, payload],\n      };\n    case types.FETCH_QUIZ_REQUEST:\n      return {\n        ...state,\n        error: \"\",\n        loading: true,\n      };\n    case types.FETCH_QUIZ_SUCCESS:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        QuizData: payload,\n      };\n    case types.FETCH_QUIZ_FAILURE:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case types.GET_CURRENT_QUIZ_REQUEST:\n      return {\n        ...state,\n        error: \"\",\n        loading: true,\n      };\n    case types.GET_CURRENT_QUIZ_SUCCESS:\n      return {\n        ...state,\n        currentQuiz: payload,\n        error: \"\",\n        loading: false,\n      };\n    case types.GET_CURRENT_QUIZ_FAILURE:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case types.GETUSERID:\n      return {\n        ...state,\n        userId: payload,\n      };\n\n    case types.GETUSERNAME:\n      return {\n        ...state,\n        userName: payload,\n      };\n    case types.LOGOUTUSER:\n      return {\n        ...state,\n        userId: null,\n        userName: null,\n        adminName: null,\n        adminId: null,\n      };\n    case types.GETADMINID:\n      return {\n        ...state,\n        adminId: payload,\n        userId: null,\n        userName: null,\n      };\n    case types.GETADMINNAME:\n      return {\n        ...state,\n        adminName: payload,\n        userId: null,\n        userName: null,\n      };\n\n    case types.GET_ALL_USER_DATA_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\",\n      };\n    case types.GET_ALL_USER_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        Alluser: payload,\n      };\n    case types.GET_ALL_USER_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: payload,\n      };\n    case types.POST_USER_RESULT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        user: payload,\n      };\n    case types.SET_USER_RESULT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        result: payload,\n      };\n    default:\n      return state;\n  }\n};"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}