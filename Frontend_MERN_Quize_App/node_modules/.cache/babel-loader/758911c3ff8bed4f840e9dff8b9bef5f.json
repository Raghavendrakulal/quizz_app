{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAGHAVENDRA\\\\Downloads\\\\MERN-Quiz-App-main\\\\MERN-Quiz-App-main\\\\Frontend_MERN_Quize_App\\\\src\\\\Components\\\\Admin\\\\QuizForm.jsx\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n// import React, { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { postQuizObj, quizSuccess } from \"../../Redux/action.js\";\n\n// export const QuizForm = () => {\n//   const data = useSelector((state) => state.mernQuize.questions);\n//   const dispatch = useDispatch();\n\n//   const [ans, setAns] = useState([\n//     { option: \"\", isCorrect: false, id: 0 },\n//     { option: \"\", isCorrect: false, id: 1 },\n//     { option: \"\", isCorrect: false, id: 2 },\n//     { option: \"\", isCorrect: false, id: 3 },\n//   ]);\n\n//   const [quiz, setQuiz] = useState({\n//     title: \"\",\n//     questions: \"\",\n//     options: ans,\n//     correctAnswer: \"\",\n//   });\n\n//   const handleQuiz = (event) => {\n//     event.preventDefault();\n//     dispatch(quizSuccess(quiz));\n//   };\n//   const handleUploadnew = (event) => {\n//     event.preventDefault();\n//     const obj = {\n//       title: data[0].title,\n//       questionArray: data,\n//     };\n\n//     dispatch(postQuizObj(obj));\n//   };\n//   const handleType = (id) => (event) => {\n//     const { name, value } = event.target;\n//     setAns((prev) =>\n//       ans?.map((item) =>\n//         item.id === id\n//           ? { ...item, [name]: value == \"true\" ? true : value }\n//           : item\n//       )\n//     );\n//     setQuiz({ ...quiz, options: ans });\n//   };\n\n//   return (\n//     <div className=\"w-10/12 flex  text-slate-50\">\n//       <div className=\"w-1/2 mt-24 ml-32\">\n//         <img className=\"h-80 pl-36 mt-8\" src=\"./feedback.gif\" alt=\"feedback\" />\n//       </div>\n\n//       <div className=\"\">\n//         <div className=\"flex text-yellow-500  w-96 font-bold font-serif mb-2 ml-12 mt-14\">\n//           <h1 className=\"text-2xl \">ADD QUESTIONS </h1>\n//           <img src=\"./add.gif\" alt=\"add icon\" className=\"w-1/3 h-20 -mt-6\" />\n//         </div>\n//         <form className=\"-mt-6\">\n//           <label\n//             className=\"block uppercase tracking-wide  text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Title{\" \"}\n//           </label>\n//           <input\n//             className=\" block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//             id=\"grid-first-name\"\n//             type=\"text\"\n//             placeholder=\"Title\"\n//             onChange={(event) => {\n//               setQuiz({ ...quiz, title: event.target.value });\n//             }}\n//           />\n//           <label\n//             className=\"block uppercase tracking-wide text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Question{\" \"}\n//           </label>\n//           <input\n//             className=\" block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//             id=\"grid-first-name\"\n//             type=\"text\"\n//             placeholder=\"Question\"\n//             onChange={(event) =>\n//               setQuiz({ ...quiz, questions: event.target.value })\n//             }\n//           />\n//           <label\n//             className=\"block uppercase tracking-wide  text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Options\n//           </label>\n//           <div className=\"\">\n//             {ans?.map((x) => {\n//               return (\n//                 <div key={x.id} className=\"flex  gap-1 \">\n//                   <input\n//                     className=\"w-1/2 block  bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//                     type=\"text\"\n//                     placeholder={`Option ${x.id}`}\n//                     name=\"option\"\n//                     value={x.option}\n//                     onChange={(e) => {\n//                       handleType(x.id)(e);\n//                     }}\n//                   />\n//                   <select\n//                     className=\"form-select appearance-none\n//                   block\n//                   w-1/2\n//                   px-3\n//                 h-9\n//                   text-base\n//                   font-normal\n//                   text-gray-700\n//                   bg-white bg-clip-padding bg-no-repeat\n//                   border border-solid border-gray-300\n//                   rounded\n//                   transition\n//                   ease-in-out\n//                   m-0\n//                   focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n//                     name=\"isCorrect\"\n//                     id=\"\"\n//                     v-model=\"allowMultiple\"\n//                     value={x.boolean}\n//                     onChange={(e) => {\n//                       handleType(x.id)(e);\n//                     }}\n//                   >\n//                     <option value=\"\">Select the value</option>\n//                     <option value={true}>true</option>\n//                   </select>\n//                 </div>\n//               );\n//             })}\n//           </div>\n//           <label\n//             className=\"block uppercase tracking-wide  text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Answer{\" \"}\n//           </label>\n//           <input\n//             className=\" block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//             id=\"grid-first-name\"\n//             type=\"text\"\n//             placeholder=\"Answer\"\n//             onChange={(event) =>\n//               setQuiz({ ...quiz, correctAnswer: event.target.value })\n//             }\n//           />\n//           <div className=\"flex\">\n//             <button\n//               onClick={handleQuiz}\n//               className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded \"\n//             >\n//               Submit\n//             </button>\n//             <button\n//               onClick={handleUploadnew}\n//               className=\" bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded  ml-36 \"\n//             >\n//               Upload\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminAddQuizPage = () => {\n  _s();\n  // State for quiz details\n  const [quizData, setQuizData] = useState({\n    title: \"\",\n    category: \"\",\n    difficulty: \"easy\",\n    // default\n    timer: \"\",\n    questions: []\n  });\n\n  // Handle form field changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setQuizData({\n      ...quizData,\n      [name]: value\n    });\n  };\n\n  // Add a new question to the quiz\n  const handleAddQuestion = () => {\n    setQuizData({\n      ...quizData,\n      questions: [...quizData.questions, {\n        title: \"\",\n        options: [{\n          text: \"\",\n          isCorrect: false\n        }, {\n          text: \"\",\n          isCorrect: false\n        }]\n      }]\n    });\n  };\n\n  // Handle question text change\n  const handleQuestionChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[index][name] = value;\n    setQuizData({\n      ...quizData,\n      questions: updatedQuestions\n    });\n  };\n\n  // Handle options change\n  const handleOptionChange = (qIndex, oIndex, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[qIndex].options[oIndex][name] = value;\n    setQuizData({\n      ...quizData,\n      questions: updatedQuestions\n    });\n  };\n\n  // Handle correct answer selection\n  const handleCorrectOptionChange = (qIndex, oIndex) => {\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[qIndex].options.forEach((option, index) => {\n      option.isCorrect = index === oIndex;\n    });\n    setQuizData({\n      ...quizData,\n      questions: updatedQuestions\n    });\n  };\n\n  // Submit quiz data to server\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"/api/quizzes\", quizData); // Replace with actual API endpoint\n      alert(\"Quiz added successfully\");\n    } catch (err) {\n      console.error(\"Error adding quiz:\", err);\n      alert(\"Error adding quiz\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-add-quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quiz Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: quizData.title,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: quizData.category,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Math\",\n            children: \"Math\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Science\",\n            children: \"Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"History\",\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"difficulty\",\n          value: quizData.difficulty,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Timer (seconds)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"timer\",\n          value: quizData.timer,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Leave blank for no timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), quizData.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Question Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: question.title,\n              onChange: e => handleQuestionChange(qIndex, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Option \", oIndex + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"text\",\n                value: option.text,\n                onChange: e => handleOptionChange(qIndex, oIndex, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                checked: option.isCorrect,\n                onChange: () => handleCorrectOptionChange(qIndex, oIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this)]\n            }, oIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, qIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddQuestion,\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminAddQuizPage, \"HTzUJCz3+qb0oslmaBVA/l9und4=\");\n_c = AdminAddQuizPage;\nexport default AdminAddQuizPage;\nvar _c;\n$RefreshReg$(_c, \"AdminAddQuizPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AdminAddQuizPage","_s","quizData","setQuizData","title","category","difficulty","timer","questions","handleInputChange","e","name","value","target","handleAddQuestion","options","text","isCorrect","handleQuestionChange","index","updatedQuestions","handleOptionChange","qIndex","oIndex","handleCorrectOptionChange","forEach","option","handleSubmit","preventDefault","response","post","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","map","question","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Components/Admin/QuizForm.jsx"],"sourcesContent":["// import axios from \"axios\";\n// import React, { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { postQuizObj, quizSuccess } from \"../../Redux/action.js\";\n\n// export const QuizForm = () => {\n//   const data = useSelector((state) => state.mernQuize.questions);\n//   const dispatch = useDispatch();\n\n//   const [ans, setAns] = useState([\n//     { option: \"\", isCorrect: false, id: 0 },\n//     { option: \"\", isCorrect: false, id: 1 },\n//     { option: \"\", isCorrect: false, id: 2 },\n//     { option: \"\", isCorrect: false, id: 3 },\n//   ]);\n\n//   const [quiz, setQuiz] = useState({\n//     title: \"\",\n//     questions: \"\",\n//     options: ans,\n//     correctAnswer: \"\",\n//   });\n\n\n//   const handleQuiz = (event) => {\n//     event.preventDefault();\n//     dispatch(quizSuccess(quiz));\n//   };\n//   const handleUploadnew = (event) => {\n//     event.preventDefault();\n//     const obj = {\n//       title: data[0].title,\n//       questionArray: data,\n//     };\n\n//     dispatch(postQuizObj(obj));\n//   };\n//   const handleType = (id) => (event) => {\n//     const { name, value } = event.target;\n//     setAns((prev) =>\n//       ans?.map((item) =>\n//         item.id === id\n//           ? { ...item, [name]: value == \"true\" ? true : value }\n//           : item\n//       )\n//     );\n//     setQuiz({ ...quiz, options: ans });\n//   };\n\n//   return (\n//     <div className=\"w-10/12 flex  text-slate-50\">\n//       <div className=\"w-1/2 mt-24 ml-32\">\n//         <img className=\"h-80 pl-36 mt-8\" src=\"./feedback.gif\" alt=\"feedback\" />\n//       </div>\n\n//       <div className=\"\">\n//         <div className=\"flex text-yellow-500  w-96 font-bold font-serif mb-2 ml-12 mt-14\">\n//           <h1 className=\"text-2xl \">ADD QUESTIONS </h1>\n//           <img src=\"./add.gif\" alt=\"add icon\" className=\"w-1/3 h-20 -mt-6\" />\n//         </div>\n//         <form className=\"-mt-6\">\n//           <label\n//             className=\"block uppercase tracking-wide  text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Title{\" \"}\n//           </label>\n//           <input\n//             className=\" block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//             id=\"grid-first-name\"\n//             type=\"text\"\n//             placeholder=\"Title\"\n//             onChange={(event) => {\n//               setQuiz({ ...quiz, title: event.target.value });\n//             }}\n//           />\n//           <label\n//             className=\"block uppercase tracking-wide text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Question{\" \"}\n//           </label>\n//           <input\n//             className=\" block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//             id=\"grid-first-name\"\n//             type=\"text\"\n//             placeholder=\"Question\"\n//             onChange={(event) =>\n//               setQuiz({ ...quiz, questions: event.target.value })\n//             }\n//           />\n//           <label\n//             className=\"block uppercase tracking-wide  text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Options\n//           </label>\n//           <div className=\"\">\n//             {ans?.map((x) => {\n//               return (\n//                 <div key={x.id} className=\"flex  gap-1 \">\n//                   <input\n//                     className=\"w-1/2 block  bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//                     type=\"text\"\n//                     placeholder={`Option ${x.id}`}\n//                     name=\"option\"\n//                     value={x.option}\n//                     onChange={(e) => {\n//                       handleType(x.id)(e);\n//                     }}\n//                   />\n//                   <select\n//                     className=\"form-select appearance-none\n//                   block\n//                   w-1/2\n//                   px-3\n//                 h-9\n//                   text-base\n//                   font-normal\n//                   text-gray-700\n//                   bg-white bg-clip-padding bg-no-repeat\n//                   border border-solid border-gray-300\n//                   rounded\n//                   transition\n//                   ease-in-out\n//                   m-0\n//                   focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n//                     name=\"isCorrect\"\n//                     id=\"\"\n//                     v-model=\"allowMultiple\"\n//                     value={x.boolean}\n//                     onChange={(e) => {\n//                       handleType(x.id)(e);\n//                     }}\n//                   >\n//                     <option value=\"\">Select the value</option>\n//                     <option value={true}>true</option>\n//                   </select>\n//                 </div>\n//               );\n//             })}\n//           </div>\n//           <label\n//             className=\"block uppercase tracking-wide  text-xs font-bold mb-2\"\n//             htmlFor=\"grid-first-name\"\n//           >\n//             Answer{\" \"}\n//           </label>\n//           <input\n//             className=\" block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n//             id=\"grid-first-name\"\n//             type=\"text\"\n//             placeholder=\"Answer\"\n//             onChange={(event) =>\n//               setQuiz({ ...quiz, correctAnswer: event.target.value })\n//             }\n//           />\n//           <div className=\"flex\">\n//             <button\n//               onClick={handleQuiz}\n//               className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded \"\n//             >\n//               Submit\n//             </button>\n//             <button\n//               onClick={handleUploadnew}\n//               className=\" bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded  ml-36 \"\n//             >\n//               Upload\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst AdminAddQuizPage = () => {\n  // State for quiz details\n  const [quizData, setQuizData] = useState({\n    title: \"\",\n    category: \"\",\n    difficulty: \"easy\",  // default\n    timer: \"\",\n    questions: [],\n  });\n\n  // Handle form field changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setQuizData({\n      ...quizData,\n      [name]: value,\n    });\n  };\n\n  // Add a new question to the quiz\n  const handleAddQuestion = () => {\n    setQuizData({\n      ...quizData,\n      questions: [\n        ...quizData.questions,\n        {\n          title: \"\",\n          options: [{ text: \"\", isCorrect: false }, { text: \"\", isCorrect: false }],\n        },\n      ],\n    });\n  };\n\n  // Handle question text change\n  const handleQuestionChange = (index, e) => {\n    const { name, value } = e.target;\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[index][name] = value;\n    setQuizData({ ...quizData, questions: updatedQuestions });\n  };\n\n  // Handle options change\n  const handleOptionChange = (qIndex, oIndex, e) => {\n    const { name, value } = e.target;\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[qIndex].options[oIndex][name] = value;\n    setQuizData({ ...quizData, questions: updatedQuestions });\n  };\n\n  // Handle correct answer selection\n  const handleCorrectOptionChange = (qIndex, oIndex) => {\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[qIndex].options.forEach((option, index) => {\n      option.isCorrect = index === oIndex;\n    });\n    setQuizData({ ...quizData, questions: updatedQuestions });\n  };\n\n  // Submit quiz data to server\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"/api/quizzes\", quizData);  // Replace with actual API endpoint\n      alert(\"Quiz added successfully\");\n    } catch (err) {\n      console.error(\"Error adding quiz:\", err);\n      alert(\"Error adding quiz\");\n    }\n  };\n\n  return (\n    <div className=\"admin-add-quiz-container\">\n      <h2>Add New Quiz</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Quiz Title */}\n        <div>\n          <label>Quiz Title</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={quizData.title}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n\n        {/* Category */}\n        <div>\n          <label>Category</label>\n          <select\n            name=\"category\"\n            value={quizData.category}\n            onChange={handleInputChange}\n            required\n          >\n            <option value=\"Math\">Math</option>\n            <option value=\"Science\">Science</option>\n            <option value=\"History\">History</option>\n            {/* Add more categories */}\n          </select>\n        </div>\n\n        {/* Difficulty */}\n        <div>\n          <label>Difficulty</label>\n          <select\n            name=\"difficulty\"\n            value={quizData.difficulty}\n            onChange={handleInputChange}\n            required\n          >\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n\n        {/* Timer */}\n        <div>\n          <label>Timer (seconds)</label>\n          <input\n            type=\"number\"\n            name=\"timer\"\n            value={quizData.timer}\n            onChange={handleInputChange}\n          />\n          <span>Leave blank for no timer</span>\n        </div>\n\n        {/* Questions */}\n        <div>\n          <h3>Questions</h3>\n          {quizData.questions.map((question, qIndex) => (\n            <div key={qIndex} className=\"question-section\">\n              <div>\n                <label>Question Text</label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  value={question.title}\n                  onChange={(e) => handleQuestionChange(qIndex, e)}\n                  required\n                />\n              </div>\n\n              {/* Options */}\n              <div>\n                <h4>Options</h4>\n                {question.options.map((option, oIndex) => (\n                  <div key={oIndex}>\n                    <label>Option {oIndex + 1}</label>\n                    <input\n                      type=\"text\"\n                      name=\"text\"\n                      value={option.text}\n                      onChange={(e) => handleOptionChange(qIndex, oIndex, e)}\n                      required\n                    />\n                    <input\n                      type=\"radio\"\n                      checked={option.isCorrect}\n                      onChange={() => handleCorrectOptionChange(qIndex, oIndex)}\n                    />\n                    <label>Correct</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n          <button type=\"button\" onClick={handleAddQuestion}>\n            Add Question\n          </button>\n        </div>\n\n        <button type=\"submit\">Save Quiz</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AdminAddQuizPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAAG;IACrBC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAIC,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module"}