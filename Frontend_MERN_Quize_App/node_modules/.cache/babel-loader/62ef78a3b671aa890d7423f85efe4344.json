{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./actiontype.js\";\n\n// Action to fetch all user data\nexport const getAllUserDataFromBackend = () => async dispatch => {\n  const token = localStorage.getItem(\"token\");\n  dispatch({\n    type: types.GET_ALL_USER_DATA_REQUEST\n  });\n  try {\n    const response = await axios.get(\"http://localhost:4000/getuser\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: types.GET_ALL_USER_DATA_SUCCESS,\n      payload: response.data // Pass the fetched user data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: types.GET_ALL_USER_DATA_FAILURE,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching user data\"\n    });\n  }\n};","map":{"version":3,"names":["axios","types","getAllUserDataFromBackend","dispatch","token","localStorage","getItem","type","GET_ALL_USER_DATA_REQUEST","response","get","headers","Authorization","GET_ALL_USER_DATA_SUCCESS","payload","data","error","_error$response","_error$response$data","GET_ALL_USER_DATA_FAILURE","message"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Redux/action.js"],"sourcesContent":["import axios from \"axios\";\nimport * as types from \"./actiontype.js\";\n\n// Action to fetch all user data\nexport const getAllUserDataFromBackend = () => async (dispatch) => {\n  const token = localStorage.getItem(\"token\");\n\n  dispatch({ type: types.GET_ALL_USER_DATA_REQUEST });\n\n  try {\n    const response = await axios.get(\"http://localhost:4000/getuser\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    dispatch({\n      type: types.GET_ALL_USER_DATA_SUCCESS,\n      payload: response.data, // Pass the fetched user data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.GET_ALL_USER_DATA_FAILURE,\n      payload: error.response?.data?.message || \"Error fetching user data\",\n    });\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,iBAAiB;;AAExC;AACA,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACjE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CH,QAAQ,CAAC;IAAEI,IAAI,EAAEN,KAAK,CAACO;EAA0B,CAAC,CAAC;EAEnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,+BAA+B,EAAE;MAChEC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUR,KAAK;MAChC;IACF,CAAC,CAAC;IAEFD,QAAQ,CAAC;MACPI,IAAI,EAAEN,KAAK,CAACY,yBAAyB;MACrCC,OAAO,EAAEL,QAAQ,CAACM,IAAI,CAAE;IAC1B,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdf,QAAQ,CAAC;MACPI,IAAI,EAAEN,KAAK,CAACkB,yBAAyB;MACrCL,OAAO,EAAE,EAAAG,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI;IAC5C,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}