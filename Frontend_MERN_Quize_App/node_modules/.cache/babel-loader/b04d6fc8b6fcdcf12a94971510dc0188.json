{"ast":null,"code":"import * as types from \"./actiontype.js\";\nimport axios from \"axios\";\n\n// Fetch quiz request\nconst fetchQuizRequest = () => ({\n  type: types.FETCH_QUIZ_REQUEST\n});\n\n// Fetch quiz success\nconst fetchQuizSuccess = payload => ({\n  type: types.FETCH_QUIZ_SUCCESS,\n  payload\n});\n\n// Fetch quiz failure\nconst fetchQuizFailure = error => ({\n  type: types.FETCH_QUIZ_FAILURE,\n  payload: error\n});\n\n// Fetch quiz by ID\nexport const getQuiz = params => async dispatch => {\n  if (!(params !== null && params !== void 0 && params.id)) {\n    console.error(\"Quiz ID is missing in params:\", params);\n    return;\n  }\n  console.log(\"Fetching quiz for ID:\", params.id);\n  dispatch(fetchQuizRequest());\n  try {\n    const res = await axios.get(`http://localhost:4000/quiz/${params.id}`);\n    console.log(\"Quiz Data Received:\", res.data);\n    dispatch(fetchQuizSuccess(res.data));\n  } catch (err) {\n    console.error(\"Error fetching quiz:\", err.message);\n    dispatch(fetchQuizFailure(err.message));\n  }\n};\n\n// Post user result\nexport const postQuizResult = obj => async dispatch => {\n  const {\n    userId\n  } = obj;\n  if (!userId) {\n    console.error(\"User ID is missing in result data:\", obj);\n    return;\n  }\n  dispatch({\n    type: types.POST_USER_RESULT_REQUEST\n  });\n  try {\n    const res = await axios.post(`http://localhost:4000/userResult/${userId}`, obj);\n    dispatch({\n      type: types.POST_USER_RESULT_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(\"Error posting quiz result:\", err.message);\n    dispatch({\n      type: types.POST_USER_RESULT_FAILURE,\n      payload: err.message\n    });\n  }\n};\n\n// Fetch all user data for admin\nexport const getAllUserDataFromBackend = () => async dispatch => {\n  dispatch({\n    type: types.GET_ALL_USER_DATA_REQUEST\n  });\n  try {\n    const res = await axios.get(\"http://localhost:4000/getuser\");\n    dispatch({\n      type: types.GET_ALL_USER_DATA_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(\"Error fetching user data:\", err.message);\n    dispatch({\n      type: types.GET_ALL_USER_DATA_FAILURE,\n      payload: err.message\n    });\n  }\n};\n\n// Delete user by admin\nexport const deleteUserByAdmin = userId => async dispatch => {\n  if (!userId) {\n    console.error(\"User ID is required for deletion\");\n    return;\n  }\n  try {\n    await axios.delete(`http://localhost:4000/user/${userId}`);\n    dispatch(getAllUserDataFromBackend()); // Refresh user list after deletion\n  } catch (error) {\n    console.error(\"Error deleting user:\", error.message);\n  }\n};","map":{"version":3,"names":["types","axios","fetchQuizRequest","type","FETCH_QUIZ_REQUEST","fetchQuizSuccess","payload","FETCH_QUIZ_SUCCESS","fetchQuizFailure","error","FETCH_QUIZ_FAILURE","getQuiz","params","dispatch","id","console","log","res","get","data","err","message","postQuizResult","obj","userId","POST_USER_RESULT_REQUEST","post","POST_USER_RESULT_SUCCESS","POST_USER_RESULT_FAILURE","getAllUserDataFromBackend","GET_ALL_USER_DATA_REQUEST","GET_ALL_USER_DATA_SUCCESS","GET_ALL_USER_DATA_FAILURE","deleteUserByAdmin","delete"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Redux/action.js"],"sourcesContent":["import * as types from \"./actiontype.js\";  \nimport axios from \"axios\";  \n\n// Fetch quiz request\nconst fetchQuizRequest = () => ({\n  type: types.FETCH_QUIZ_REQUEST,\n});\n\n// Fetch quiz success\nconst fetchQuizSuccess = (payload) => ({\n  type: types.FETCH_QUIZ_SUCCESS,\n  payload,\n});\n\n// Fetch quiz failure\nconst fetchQuizFailure = (error) => ({\n  type: types.FETCH_QUIZ_FAILURE,\n  payload: error,\n});\n\n// Fetch quiz by ID\nexport const getQuiz = (params) => async (dispatch) => {\n  if (!params?.id) {\n    console.error(\"Quiz ID is missing in params:\", params);\n    return;\n  }\n\n  console.log(\"Fetching quiz for ID:\", params.id);\n  dispatch(fetchQuizRequest());\n\n  try {\n    const res = await axios.get(`http://localhost:4000/quiz/${params.id}`);\n    console.log(\"Quiz Data Received:\", res.data);\n    dispatch(fetchQuizSuccess(res.data));\n  } catch (err) {\n    console.error(\"Error fetching quiz:\", err.message);\n    dispatch(fetchQuizFailure(err.message));\n  }\n};\n\n// Post user result\nexport const postQuizResult = (obj) => async (dispatch) => {\n  const { userId } = obj;\n  if (!userId) {\n    console.error(\"User ID is missing in result data:\", obj);\n    return;\n  }\n\n  dispatch({ type: types.POST_USER_RESULT_REQUEST });\n\n  try {\n    const res = await axios.post(`http://localhost:4000/userResult/${userId}`, obj);\n    dispatch({ type: types.POST_USER_RESULT_SUCCESS, payload: res.data });\n  } catch (err) {\n    console.error(\"Error posting quiz result:\", err.message);\n    dispatch({ type: types.POST_USER_RESULT_FAILURE, payload: err.message });\n  }\n};\n\n// Fetch all user data for admin\nexport const getAllUserDataFromBackend = () => async (dispatch) => {\n  dispatch({ type: types.GET_ALL_USER_DATA_REQUEST });\n\n  try {\n    const res = await axios.get(\"http://localhost:4000/getuser\");\n    dispatch({ type: types.GET_ALL_USER_DATA_SUCCESS, payload: res.data });\n  } catch (err) {\n    console.error(\"Error fetching user data:\", err.message);\n    dispatch({ type: types.GET_ALL_USER_DATA_FAILURE, payload: err.message });\n  }\n};\n\n// Delete user by admin\nexport const deleteUserByAdmin = (userId) => async (dispatch) => {\n  if (!userId) {\n    console.error(\"User ID is required for deletion\");\n    return;\n  }\n\n  try {\n    await axios.delete(`http://localhost:4000/user/${userId}`);\n    dispatch(getAllUserDataFromBackend()); // Refresh user list after deletion\n  } catch (error) {\n    console.error(\"Error deleting user:\", error.message);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}