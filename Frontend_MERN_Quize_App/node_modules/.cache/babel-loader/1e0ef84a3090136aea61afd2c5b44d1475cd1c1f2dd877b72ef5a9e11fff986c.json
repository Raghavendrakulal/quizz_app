{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAGHAVENDRA\\\\Downloads\\\\MERN-Quiz-App-main\\\\MERN-Quiz-App-main\\\\Frontend_MERN_Quize_App\\\\src\\\\Pages\\\\QuizResults.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const QuizResults = () => {\n//   const location = useLocation();\n//   const { quiz, answers, user } = location.state;\n//   const [resultsSaved, setResultsSaved] = useState(false); // Flag to track if results are saved\n//   const saveResultsCalled = useRef(false); // Ref to track if saveResults has been called\n\n//   // Calculate the score\n//   const score = quiz.questions.reduce((acc, question, index) => {\n//     const correctAnswer = question.options.find(opt => opt.isCorrect)?.text;\n//     if (answers[index] === correctAnswer) {\n//       return acc + 1;\n//     }\n//     return acc;\n//   }, 0);\n\n//   useEffect(() => {\n//     // Save the results to the database\n//     const saveResults = async () => {\n//       try {\n//         const userName = user?.name || \"Default User\"; // Provide a default user name if undefined\n//         console.log(\"Sending data to server:\", { user: userName, category: quiz.category, score: score });\n//         await axios.post(\"http://localhost:4000/quiz/save-results\", {\n//           user: userName,\n//           category: quiz.category,\n//           score: score,\n//         });\n//         console.log(\"Results saved successfully\");\n//         setResultsSaved(true); // Set the flag to true after saving results\n//       } catch (error) {\n//         console.error(\"Error saving results:\", error);\n//       }\n//     };\n\n//     if (!resultsSaved && !saveResultsCalled.current) {\n//       saveResultsCalled.current = true; // Set the ref to true to prevent multiple calls\n//       saveResults();\n//     }\n//   }, [quiz.category, score, user, resultsSaved]);\n\n//   return (\n//     <div className=\"flex flex-col min-h-screen\">\n//       <div className=\"container mx-auto p-8 flex-grow\">\n//         <h1 className=\"text-3xl font-bold mb-6\">Quiz Results</h1>\n//         <h2 className=\"text-xl font-bold mb-4\">{quiz.title}</h2>\n//         <p className=\"text-gray-600 mb-4\">Difficulty: {quiz.difficulty}</p>\n//         <p className=\"text-2xl font-bold mb-4\">Your Score: {score} / {quiz.questions.length}</p>\n\n//         {quiz.questions.map((question, index) => (\n//           <div key={index} className=\"mb-8 p-4 bg-white shadow-lg rounded-lg\">\n//             <h3 className=\"text-lg font-semibold\">{index + 1}. {question.title}</h3>\n//             <p><strong>Your Answer:</strong> {answers[index]}</p>\n//             <p><strong>Correct Answer:</strong> {question.options.find(opt => opt.isCorrect)?.text || \"No correct answer available\"}</p>\n//           </div>\n//         ))}\n//       </div>\n//       <footer className=\"bg-gray-800 text-white p-4 text-center mt-auto\">\n//         <p>&copy; 2025 Quiz App. All rights reserved.</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default QuizResults;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizResults = () => {\n  _s();\n  const location = useLocation();\n  const {\n    quiz,\n    answers,\n    user\n  } = location.state;\n  const [resultsSaved, setResultsSaved] = useState(false); // Flag to track if results are saved\n  const saveResultsCalled = useRef(false); // Ref to track if saveResults has been called\n\n  // Calculate the score\n  const correctAnswers = quiz.questions.reduce((acc, question, index) => {\n    var _question$options$fin;\n    const correctAnswer = (_question$options$fin = question.options.find(opt => opt.isCorrect)) === null || _question$options$fin === void 0 ? void 0 : _question$options$fin.text;\n    if (answers[index] === correctAnswer) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0);\n  const totalQuestions = quiz.questions.length;\n  const percentage = (correctAnswers / totalQuestions * 100).toFixed(2);\n  useEffect(() => {\n    // Save the results to the database\n    const saveResults = async () => {\n      try {\n        const userName = (user === null || user === void 0 ? void 0 : user.name) || \"Default User\"; // Provide a default user name if undefined\n        const email = (user === null || user === void 0 ? void 0 : user.email) || \"default@example.com\"; // Provide a default email if undefined\n        console.log(\"Sending data to server:\", {\n          userId: user.id,\n          userName,\n          email,\n          category: quiz.category,\n          totalQuestions,\n          correctAnswers,\n          percentage\n        });\n        await axios.post(\"http://localhost:4000/quiz/save-results\", {\n          userId: user.id,\n          userName,\n          email,\n          category: quiz.category,\n          totalQuestions,\n          correctAnswers,\n          percentage\n        });\n        console.log(\"Results saved successfully\");\n        setResultsSaved(true); // Set the flag to true after saving results\n      } catch (error) {\n        console.error(\"Error saving results:\", error);\n      }\n    };\n    if (!resultsSaved && !saveResultsCalled.current) {\n      saveResultsCalled.current = true; // Set the ref to true to prevent multiple calls\n      saveResults();\n    }\n  }, [quiz.category, totalQuestions, correctAnswers, percentage, user, resultsSaved]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-8 flex-grow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: [\"Difficulty: \", quiz.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: [\"Your Score: \", correctAnswers, \" / \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold mb-4\",\n        children: [\"Percentage: \", percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), quiz.questions.map((question, index) => {\n        var _question$options$fin2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 p-4 bg-white shadow-lg rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: [index + 1, \". \", question.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), \" \", answers[index]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Correct Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), \" \", ((_question$options$fin2 = question.options.find(opt => opt.isCorrect)) === null || _question$options$fin2 === void 0 ? void 0 : _question$options$fin2.text) || \"No correct answer available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"bg-gray-800 text-white p-4 text-center mt-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 Quiz App. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizResults, \"4WfvH4XthFI0jHFkZeQQxY+jqbs=\", false, function () {\n  return [useLocation];\n});\n_c = QuizResults;\nexport default QuizResults;\nvar _c;\n$RefreshReg$(_c, \"QuizResults\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","axios","jsxDEV","_jsxDEV","QuizResults","_s","location","quiz","answers","user","state","resultsSaved","setResultsSaved","saveResultsCalled","correctAnswers","questions","reduce","acc","question","index","_question$options$fin","correctAnswer","options","find","opt","isCorrect","text","totalQuestions","length","percentage","toFixed","saveResults","userName","name","email","console","log","userId","id","category","post","error","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","difficulty","map","_question$options$fin2","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Pages/QuizResults.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const QuizResults = () => {\r\n//   const location = useLocation();\r\n//   const { quiz, answers, user } = location.state;\r\n//   const [resultsSaved, setResultsSaved] = useState(false); // Flag to track if results are saved\r\n//   const saveResultsCalled = useRef(false); // Ref to track if saveResults has been called\r\n\r\n//   // Calculate the score\r\n//   const score = quiz.questions.reduce((acc, question, index) => {\r\n//     const correctAnswer = question.options.find(opt => opt.isCorrect)?.text;\r\n//     if (answers[index] === correctAnswer) {\r\n//       return acc + 1;\r\n//     }\r\n//     return acc;\r\n//   }, 0);\r\n\r\n//   useEffect(() => {\r\n//     // Save the results to the database\r\n//     const saveResults = async () => {\r\n//       try {\r\n//         const userName = user?.name || \"Default User\"; // Provide a default user name if undefined\r\n//         console.log(\"Sending data to server:\", { user: userName, category: quiz.category, score: score });\r\n//         await axios.post(\"http://localhost:4000/quiz/save-results\", {\r\n//           user: userName,\r\n//           category: quiz.category,\r\n//           score: score,\r\n//         });\r\n//         console.log(\"Results saved successfully\");\r\n//         setResultsSaved(true); // Set the flag to true after saving results\r\n//       } catch (error) {\r\n//         console.error(\"Error saving results:\", error);\r\n//       }\r\n//     };\r\n\r\n//     if (!resultsSaved && !saveResultsCalled.current) {\r\n//       saveResultsCalled.current = true; // Set the ref to true to prevent multiple calls\r\n//       saveResults();\r\n//     }\r\n//   }, [quiz.category, score, user, resultsSaved]);\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col min-h-screen\">\r\n//       <div className=\"container mx-auto p-8 flex-grow\">\r\n//         <h1 className=\"text-3xl font-bold mb-6\">Quiz Results</h1>\r\n//         <h2 className=\"text-xl font-bold mb-4\">{quiz.title}</h2>\r\n//         <p className=\"text-gray-600 mb-4\">Difficulty: {quiz.difficulty}</p>\r\n//         <p className=\"text-2xl font-bold mb-4\">Your Score: {score} / {quiz.questions.length}</p>\r\n\r\n//         {quiz.questions.map((question, index) => (\r\n//           <div key={index} className=\"mb-8 p-4 bg-white shadow-lg rounded-lg\">\r\n//             <h3 className=\"text-lg font-semibold\">{index + 1}. {question.title}</h3>\r\n//             <p><strong>Your Answer:</strong> {answers[index]}</p>\r\n//             <p><strong>Correct Answer:</strong> {question.options.find(opt => opt.isCorrect)?.text || \"No correct answer available\"}</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <footer className=\"bg-gray-800 text-white p-4 text-center mt-auto\">\r\n//         <p>&copy; 2025 Quiz App. All rights reserved.</p>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuizResults;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst QuizResults = () => {\r\n  const location = useLocation();\r\n  const { quiz, answers, user } = location.state;\r\n  const [resultsSaved, setResultsSaved] = useState(false); // Flag to track if results are saved\r\n  const saveResultsCalled = useRef(false); // Ref to track if saveResults has been called\r\n\r\n  // Calculate the score\r\n  const correctAnswers = quiz.questions.reduce((acc, question, index) => {\r\n    const correctAnswer = question.options.find((opt) => opt.isCorrect)?.text;\r\n    if (answers[index] === correctAnswer) {\r\n      return acc + 1;\r\n    }\r\n    return acc;\r\n  }, 0);\r\n\r\n  const totalQuestions = quiz.questions.length;\r\n  const percentage = ((correctAnswers / totalQuestions) * 100).toFixed(2);\r\n\r\n  useEffect(() => {\r\n    // Save the results to the database\r\n    const saveResults = async () => {\r\n      try {\r\n        const userName = user?.name || \"Default User\"; // Provide a default user name if undefined\r\n        const email = user?.email || \"default@example.com\"; // Provide a default email if undefined\r\n        console.log(\"Sending data to server:\", {\r\n          userId: user.id,\r\n          userName,\r\n          email,\r\n          category: quiz.category,\r\n          totalQuestions,\r\n          correctAnswers,\r\n          percentage,\r\n        });\r\n\r\n        await axios.post(\"http://localhost:4000/quiz/save-results\", {\r\n          userId: user.id,\r\n          userName,\r\n          email,\r\n          category: quiz.category,\r\n          totalQuestions,\r\n          correctAnswers,\r\n          percentage,\r\n        });\r\n\r\n        console.log(\"Results saved successfully\");\r\n        setResultsSaved(true); // Set the flag to true after saving results\r\n      } catch (error) {\r\n        console.error(\"Error saving results:\", error);\r\n      }\r\n    };\r\n\r\n    if (!resultsSaved && !saveResultsCalled.current) {\r\n      saveResultsCalled.current = true; // Set the ref to true to prevent multiple calls\r\n      saveResults();\r\n    }\r\n  }, [quiz.category, totalQuestions, correctAnswers, percentage, user, resultsSaved]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <div className=\"container mx-auto p-8 flex-grow\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Quiz Results</h1>\r\n        <h2 className=\"text-xl font-bold mb-4\">{quiz.title}</h2>\r\n        <p className=\"text-gray-600 mb-4\">Difficulty: {quiz.difficulty}</p>\r\n        <p className=\"text-2xl font-bold mb-4\">Your Score: {correctAnswers} / {totalQuestions}</p>\r\n        <p className=\"text-xl font-bold mb-4\">Percentage: {percentage}%</p>\r\n\r\n        {quiz.questions.map((question, index) => (\r\n          <div key={index} className=\"mb-8 p-4 bg-white shadow-lg rounded-lg\">\r\n            <h3 className=\"text-lg font-semibold\">\r\n              {index + 1}. {question.title}\r\n            </h3>\r\n            <p>\r\n              <strong>Your Answer:</strong> {answers[index]}\r\n            </p>\r\n            <p>\r\n              <strong>Correct Answer:</strong>{\" \"}\r\n              {question.options.find((opt) => opt.isCorrect)?.text || \"No correct answer available\"}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <footer className=\"bg-gray-800 text-white p-4 text-center mt-auto\">\r\n        <p>&copy; 2025 Quiz App. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}