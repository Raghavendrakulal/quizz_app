{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jwtDecode}from\"jwt-decode\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Quizes=()=>{const{id}=useParams();const navigate=useNavigate();const[quiz,setQuiz]=useState(null);const[error,setError]=useState(\"\");const[answers,setAnswers]=useState({});const[submitted,setSubmitted]=useState(false);const[timeLeft,setTimeLeft]=useState(null);// Dynamic Timer\n// Decode user data from token\nconst token=localStorage.getItem(\"token\");let userName=null;let userId=null;let email=null;if(token){try{const decodedToken=jwtDecode(token);userName=decodedToken.name;userId=decodedToken.id;email=decodedToken.email;}catch(error){console.error(\"Invalid token:\",error);}}// Fetch quiz data\nuseEffect(()=>{const fetchQuiz=async()=>{try{const response=await axios.get(`http://localhost:4000/quiz/${id}`);setQuiz(response.data);if(response.data.timer){setTimeLeft(response.data.timer*60);// Convert minutes to seconds\n}}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Error fetching quiz data\");}};fetchQuiz();},[id]);// Timer Effect - Auto-submit when time is up\nuseEffect(()=>{if(timeLeft===null||submitted)return;// Don't start if time is null or already submitted\nconst timer=setInterval(()=>{setTimeLeft(prevTime=>{if(prevTime<=1){clearInterval(timer);handleSubmit();// Auto-submit when timer ends\nreturn 0;}return prevTime-1;});},1000);return()=>clearInterval(timer);},[timeLeft,submitted]);// Format Timer (MM:SS)\nconst formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return`${minutes}:${secs<10?\"0\":\"\"}${secs}`;};// Handle option selection\nconst handleOptionChange=(questionIndex,optionText)=>{setAnswers(prev=>({...prev,[questionIndex]:optionText}));};// Submit Handler\n// Submit Handler (No Mandatory Answer Check)\nconst handleSubmit=()=>{setSubmitted(true);navigate(\"/quiz-results\",{state:{quiz,answers,user:{id:userId,name:userName,email}}});};if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500\",children:error});if(!quiz)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading quiz data...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-6\",children:quiz.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 mb-4\",children:[\"Difficulty: \",quiz.difficulty]}),timeLeft!==null?/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold mb-4\",children:[\"Time Left: \",formatTime(timeLeft)]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading timer...\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Questions:\"}),quiz.questions&&quiz.questions.length>0?quiz.questions.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-4 bg-white shadow-lg rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold\",children:[index+1,\". \",question.title]}),/*#__PURE__*/_jsx(\"ul\",{className:\"mt-4\",children:question.options.map((option,i)=>/*#__PURE__*/_jsx(\"li\",{className:\"text-gray-700\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`question-${index}`,value:option.text,checked:answers[index]===option.text,onChange:()=>handleOptionChange(index,option.text),className:\"mr-2\"}),option.text]})},i))})]},index)):/*#__PURE__*/_jsx(\"p\",{children:\"No questions available for this quiz.\"}),!submitted&&/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"mt-6 bg-teal-500 text-white px-4 py-2 rounded\",children:\"Submit Quiz\"})]});};","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jwtDecode","jsx","_jsx","jsxs","_jsxs","Quizes","id","navigate","quiz","setQuiz","error","setError","answers","setAnswers","submitted","setSubmitted","timeLeft","setTimeLeft","token","localStorage","getItem","userName","userId","email","decodedToken","name","console","fetchQuiz","response","get","data","timer","_error$response","_error$response$data","message","setInterval","prevTime","clearInterval","handleSubmit","formatTime","seconds","minutes","Math","floor","secs","handleOptionChange","questionIndex","optionText","prev","state","user","className","children","title","difficulty","questions","length","map","question","index","options","option","i","type","value","text","checked","onChange","onClick"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Pages/Quizes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\"; \r\n\r\nexport const Quizes = () => {\r\n  const { id } = useParams(); \r\n  const navigate = useNavigate(); \r\n  const [quiz, setQuiz] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(null); // Dynamic Timer\r\n\r\n  // Decode user data from token\r\n  const token = localStorage.getItem(\"token\");\r\n  let userName = null;\r\n  let userId = null;\r\n  let email = null;\r\n\r\n  if (token) {\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      userName = decodedToken.name;\r\n      userId = decodedToken.id;\r\n      email = decodedToken.email;\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n    }\r\n  }\r\n\r\n  // Fetch quiz data\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/quiz/${id}`);\r\n        setQuiz(response.data);\r\n        if (response.data.timer) {\r\n          setTimeLeft(response.data.timer * 60); // Convert minutes to seconds\r\n        }\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || \"Error fetching quiz data\");\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [id]);\r\n\r\n  // Timer Effect - Auto-submit when time is up\r\n  useEffect(() => {\r\n    if (timeLeft === null || submitted) return; // Don't start if time is null or already submitted\r\n    \r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          handleSubmit(); // Auto-submit when timer ends\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, submitted]);\r\n\r\n  // Format Timer (MM:SS)\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  };\r\n\r\n  // Handle option selection\r\n  const handleOptionChange = (questionIndex, optionText) => {\r\n    setAnswers((prev) => ({\r\n      ...prev,\r\n      [questionIndex]: optionText,\r\n    }));\r\n  };\r\n\r\n  // Submit Handler\r\n // Submit Handler (No Mandatory Answer Check)\r\nconst handleSubmit = () => {\r\n  setSubmitted(true);\r\n  navigate(\"/quiz-results\", {\r\n    state: {\r\n      quiz,\r\n      answers,\r\n      user: { id: userId, name: userName, email },\r\n    },\r\n  });\r\n};\r\n\r\n\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n  if (!quiz) return <p>Loading quiz data...</p>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">{quiz.title}</h1>\r\n      <p className=\"text-gray-600 mb-4\">Difficulty: {quiz.difficulty}</p>\r\n      \r\n      {/* Timer Display */}\r\n      {timeLeft !== null ? (\r\n        <h2 className=\"text-xl font-bold mb-4\">Time Left: {formatTime(timeLeft)}</h2>\r\n      ) : (\r\n        <p>Loading timer...</p>\r\n      )}\r\n\r\n      <h2 className=\"text-xl font-bold mb-4\">Questions:</h2>\r\n      {quiz.questions && quiz.questions.length > 0 ? (\r\n        quiz.questions.map((question, index) => (\r\n          <div key={index} className=\"mb-8 p-4 bg-white shadow-lg rounded-lg\">\r\n            <h3 className=\"text-lg font-semibold\">{index + 1}. {question.title}</h3>\r\n            <ul className=\"mt-4\">\r\n              {question.options.map((option, i) => (\r\n                <li key={i} className=\"text-gray-700\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${index}`}\r\n                      value={option.text}\r\n                      checked={answers[index] === option.text}\r\n                      onChange={() => handleOptionChange(index, option.text)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    {option.text}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No questions available for this quiz.</p>\r\n      )}\r\n\r\n      {/* Submit Button */}\r\n      {!submitted && (\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"mt-6 bg-teal-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Submit Quiz\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}