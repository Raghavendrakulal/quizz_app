{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAGHAVENDRA\\\\Downloads\\\\MERN-Quiz-App-main\\\\MERN-Quiz-App-main\\\\Frontend_MERN_Quize_App\\\\src\\\\Pages\\\\Quizes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quizes = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null); // Dynamic Timer\n\n  // Decode user data from token\n  const token = localStorage.getItem(\"token\");\n  let userName = null;\n  let userId = null;\n  let email = null;\n  if (token) {\n    try {\n      const decodedToken = jwtDecode(token);\n      userName = decodedToken.name;\n      userId = decodedToken.id;\n      email = decodedToken.email;\n    } catch (error) {\n      console.error(\"Invalid token:\", error);\n    }\n  }\n\n  // Fetch quiz data\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/quiz/${id}`);\n        setQuiz(response.data);\n        if (response.data.timer) {\n          setTimeLeft(response.data.timer * 60); // Convert minutes to seconds\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching quiz data\");\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n\n  // Timer Effect - Auto-submit when time is up\n  useEffect(() => {\n    if (timeLeft === null || submitted) return; // Don't start if time is null or already submitted\n\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          handleSubmit(); // Auto-submit when timer ends\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, submitted]);\n\n  // Format Timer (MM:SS)\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  };\n\n  // Handle option selection\n  const handleOptionChange = (questionIndex, optionText) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionIndex]: optionText\n    }));\n  };\n\n  // Submit Handler\n  // Submit Handler (No Mandatory Answer Check)\n  const handleSubmit = () => {\n    setSubmitted(true);\n    navigate(\"/quiz-results\", {\n      state: {\n        quiz,\n        answers,\n        user: {\n          id: userId,\n          name: userName,\n          email\n        }\n      }\n    });\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 21\n  }, this);\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading quiz data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-4\",\n      children: [\"Difficulty: \", quiz.difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), timeLeft !== null ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [\"Time Left: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading timer...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), quiz.questions && quiz.questions.length > 0 ? quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-4 bg-white shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: [index + 1, \". \", question.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-4\",\n        children: question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${index}`,\n              value: option.text,\n              checked: answers[index] === option.text,\n              onChange: () => handleOptionChange(index, option.text),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this), option.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this quiz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), !submitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"mt-6 bg-teal-500 text-white px-4 py-2 rounded\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Quizes, \"L48bSxbqVKJhSk+6NpJxT+CEyGo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quizes;\nvar _c;\n$RefreshReg$(_c, \"Quizes\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jwtDecode","jsxDEV","_jsxDEV","Quizes","_s","id","navigate","quiz","setQuiz","error","setError","answers","setAnswers","submitted","setSubmitted","timeLeft","setTimeLeft","token","localStorage","getItem","userName","userId","email","decodedToken","name","console","fetchQuiz","response","get","data","timer","_error$response","_error$response$data","message","setInterval","prevTime","clearInterval","handleSubmit","formatTime","seconds","minutes","Math","floor","secs","handleOptionChange","questionIndex","optionText","prev","state","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","difficulty","questions","length","map","question","index","options","option","i","type","value","text","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Pages/Quizes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\"; \r\n\r\nexport const Quizes = () => {\r\n  const { id } = useParams(); \r\n  const navigate = useNavigate(); \r\n  const [quiz, setQuiz] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(null); // Dynamic Timer\r\n\r\n  // Decode user data from token\r\n  const token = localStorage.getItem(\"token\");\r\n  let userName = null;\r\n  let userId = null;\r\n  let email = null;\r\n\r\n  if (token) {\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      userName = decodedToken.name;\r\n      userId = decodedToken.id;\r\n      email = decodedToken.email;\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n    }\r\n  }\r\n\r\n  // Fetch quiz data\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/quiz/${id}`);\r\n        setQuiz(response.data);\r\n        if (response.data.timer) {\r\n          setTimeLeft(response.data.timer * 60); // Convert minutes to seconds\r\n        }\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || \"Error fetching quiz data\");\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [id]);\r\n\r\n  // Timer Effect - Auto-submit when time is up\r\n  useEffect(() => {\r\n    if (timeLeft === null || submitted) return; // Don't start if time is null or already submitted\r\n    \r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          handleSubmit(); // Auto-submit when timer ends\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, submitted]);\r\n\r\n  // Format Timer (MM:SS)\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  };\r\n\r\n  // Handle option selection\r\n  const handleOptionChange = (questionIndex, optionText) => {\r\n    setAnswers((prev) => ({\r\n      ...prev,\r\n      [questionIndex]: optionText,\r\n    }));\r\n  };\r\n\r\n  // Submit Handler\r\n // Submit Handler (No Mandatory Answer Check)\r\nconst handleSubmit = () => {\r\n  setSubmitted(true);\r\n  navigate(\"/quiz-results\", {\r\n    state: {\r\n      quiz,\r\n      answers,\r\n      user: { id: userId, name: userName, email },\r\n    },\r\n  });\r\n};\r\n\r\n\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n  if (!quiz) return <p>Loading quiz data...</p>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">{quiz.title}</h1>\r\n      <p className=\"text-gray-600 mb-4\">Difficulty: {quiz.difficulty}</p>\r\n      \r\n      {/* Timer Display */}\r\n      {timeLeft !== null ? (\r\n        <h2 className=\"text-xl font-bold mb-4\">Time Left: {formatTime(timeLeft)}</h2>\r\n      ) : (\r\n        <p>Loading timer...</p>\r\n      )}\r\n\r\n      <h2 className=\"text-xl font-bold mb-4\">Questions:</h2>\r\n      {quiz.questions && quiz.questions.length > 0 ? (\r\n        quiz.questions.map((question, index) => (\r\n          <div key={index} className=\"mb-8 p-4 bg-white shadow-lg rounded-lg\">\r\n            <h3 className=\"text-lg font-semibold\">{index + 1}. {question.title}</h3>\r\n            <ul className=\"mt-4\">\r\n              {question.options.map((option, i) => (\r\n                <li key={i} className=\"text-gray-700\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${index}`}\r\n                      value={option.text}\r\n                      checked={answers[index] === option.text}\r\n                      onChange={() => handleOptionChange(index, option.text)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    {option.text}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No questions available for this quiz.</p>\r\n      )}\r\n\r\n      {/* Submit Button */}\r\n      {!submitted && (\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"mt-6 bg-teal-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Submit Quiz\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}