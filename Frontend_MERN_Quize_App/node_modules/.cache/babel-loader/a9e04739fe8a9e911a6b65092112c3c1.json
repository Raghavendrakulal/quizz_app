{"ast":null,"code":"import * as types from \"./actiontype.js\";\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"./config.js\";\n\n// Create quiz in redux store\nexport const quizRequest = () => {\n  return {\n    type: types.CREATE_QUIZ_REQUEST\n  };\n};\nexport const quizSuccess = quiz => {\n  return {\n    type: types.CREATE_QUIZ_SUCCESS,\n    payload: quiz\n  };\n};\nexport const quizFailure = error => {\n  return {\n    type: types.CREATE_QUIZ_FAILURE,\n    payload: error\n  };\n};\nconst getCurrentQuizRequest = payload => {\n  return {\n    type: types.GET_CURRENT_QUIZ_REQUEST,\n    payload\n  };\n};\nconst getCurrentQuizSuccess = payload => {\n  return {\n    type: types.GET_CURRENT_QUIZ_SUCCESS,\n    payload\n  };\n};\nconst getCurrentQuizFailure = payload => {\n  return {\n    type: types.GET_CURRENT_QUIZ_FAILURE,\n    payload\n  };\n};\nconst getCountSuccess = payload => {\n  return {\n    type: types.GETCOUNTDATA,\n    payload\n  };\n};\n\n//---------- login user ----------\n\nexport const loginUserName = payload => {\n  return {\n    type: types.GETUSERNAME,\n    payload\n  };\n};\nexport const loginUser = payload => {\n  return {\n    type: types.GETUSERID,\n    payload\n  };\n};\nexport const Logouthandleraction = payload => {\n  return {\n    type: types.LOGOUTUSER,\n    payload\n  };\n};\n_c = Logouthandleraction;\nexport const loginAdminId = payload => {\n  return {\n    type: types.GETADMINID,\n    payload\n  };\n};\nexport const loginAdminName = payload => {\n  return {\n    type: types.GETADMINNAME,\n    payload\n  };\n};\n\n// ----------------------- action creator function for  details of user  for admin page ---------------\n\nconst getAllUserDataRequest = payload => {\n  return {\n    type: types.GET_ALL_USER_DATA_REQUEST,\n    payload\n  };\n};\nconst getAllUserDataSuccess = payload => {\n  return {\n    type: types.GET_ALL_USER_DATA_SUCCESS,\n    payload\n  };\n};\nconst getAllUserDataFailure = payload => {\n  return {\n    type: types.GET_ALL_USER_DATA_FAILURE,\n    payload\n  };\n};\n\n// ----------------------- details of user  for admin page  and delete user by admin ---------------\n\nexport const getAllUserDataFromBackend = () => async dispatch => {\n  dispatch(getAllUserDataRequest());\n  try {\n    const res = await axios.get(`${API_BASE_URL}/getuser`);\n    dispatch(getAllUserDataSuccess(res.data));\n  } catch (err) {\n    dispatch(getAllUserDataFailure());\n  }\n};\nexport const deleteUserByAdmin = payload => dispatch => {\n  axios.delete(`https://mern-quiz-server-sudhir.onrender.com/${payload}`).then(response => {\n    dispatch(getAllUserDataFromBackend());\n  }).catch(error => {\n    console.log(\"error\");\n  });\n};\n\n// ----------post quiz--------------\n\nexport const postQuizObj = obj => dispatch => {\n  axios.post(\"https://mern-quiz-server-sudhir.onrender.com/admin\", obj).then(res => {}).catch(err => {});\n};\n\n// ----------------------------- fetching quiz data subject wise -------------\n\nconst fetchQuizRequest = payload => {\n  return {\n    type: types.FETCH_QUIZ_REQUEST,\n    payload\n  };\n};\nconst fetchQuizSuccess = payload => {\n  return {\n    type: types.FETCH_QUIZ_SUCCESS,\n    payload\n  };\n};\nconst fetchQuizFailure = payload => {\n  return {\n    type: types.FETCH_QUIZ_FAILURE,\n    payload\n  };\n};\nexport const fetchQuizDataFrombackend = () => dispatch => {\n  axios.get(\"https://mern-quiz-server-sudhir.onrender.com/api/quiz\").then(res => dispatch(fetchQuizSuccess(res.data))).catch(err => console.log(err));\n};\nexport const getQuiz = params => dispatch => {\n  axios.get(`https://mern-quiz-server-sudhir.onrender.com/quiz/${params.id}`).then(res => {\n    dispatch(fetchQuizSuccess(res.data));\n  }).catch(err => {});\n};\n\n//------------posting the user quiz result ------------\n\n//  -----------posting user result ------------\n\nexport const postUserResult = ans => {\n  return {\n    type: types.SET_USER_RESULT_SUCCESS,\n    payload: ans\n  };\n};\n\n// ------action creator function and axios function =-------\n\nconst postUserResultRequest = ans => {\n  return {\n    type: types.POST_USER_RESULT_SUCCESS,\n    payload: ans\n  };\n};\nconst postUserResultSuccess = ans => {\n  return {\n    type: types.POST_USER_RESULT_SUCCESS,\n    payload: ans\n  };\n};\nconst postUserResultFailure = ans => {\n  return {\n    type: types.POST_USER_RESULT_SUCCESS,\n    payload: ans\n  };\n};\nexport const postQuizResult = obj => dispatch => {\n  const {\n    quizId,\n    userId,\n    quizResult\n  } = obj;\n  dispatch(postUserResultRequest());\n  axios.post(`https://mern-quiz-server-sudhir.onrender.com/userResult/${userId}`, obj).then(res => {\n    dispatch(postUserResultSuccess(res.data));\n  }).catch(err => {\n    dispatch(postUserResultFailure(err));\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Logouthandleraction\");","map":{"version":3,"names":["types","axios","API_BASE_URL","quizRequest","type","CREATE_QUIZ_REQUEST","quizSuccess","quiz","CREATE_QUIZ_SUCCESS","payload","quizFailure","error","CREATE_QUIZ_FAILURE","getCurrentQuizRequest","GET_CURRENT_QUIZ_REQUEST","getCurrentQuizSuccess","GET_CURRENT_QUIZ_SUCCESS","getCurrentQuizFailure","GET_CURRENT_QUIZ_FAILURE","getCountSuccess","GETCOUNTDATA","loginUserName","GETUSERNAME","loginUser","GETUSERID","Logouthandleraction","LOGOUTUSER","_c","loginAdminId","GETADMINID","loginAdminName","GETADMINNAME","getAllUserDataRequest","GET_ALL_USER_DATA_REQUEST","getAllUserDataSuccess","GET_ALL_USER_DATA_SUCCESS","getAllUserDataFailure","GET_ALL_USER_DATA_FAILURE","getAllUserDataFromBackend","dispatch","res","get","data","err","deleteUserByAdmin","delete","then","response","catch","console","log","postQuizObj","obj","post","fetchQuizRequest","FETCH_QUIZ_REQUEST","fetchQuizSuccess","FETCH_QUIZ_SUCCESS","fetchQuizFailure","FETCH_QUIZ_FAILURE","fetchQuizDataFrombackend","getQuiz","params","id","postUserResult","ans","SET_USER_RESULT_SUCCESS","postUserResultRequest","POST_USER_RESULT_SUCCESS","postUserResultSuccess","postUserResultFailure","postQuizResult","quizId","userId","quizResult","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Redux/action.js"],"sourcesContent":["import * as types from \"./actiontype.js\";\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"./config.js\";\n\n// Create quiz in redux store\nexport const quizRequest = () => {\n  return {\n    type: types.CREATE_QUIZ_REQUEST,\n  };\n};\n\nexport const quizSuccess = (quiz) => {\n  return {\n    type: types.CREATE_QUIZ_SUCCESS,\n    payload: quiz,\n  };\n};\n\nexport const quizFailure = (error) => {\n  return {\n    type: types.CREATE_QUIZ_FAILURE,\n    payload: error,\n  };\n};\n\nconst getCurrentQuizRequest = (payload) => {\n  return {\n    type: types.GET_CURRENT_QUIZ_REQUEST,\n    payload,\n  };\n};\nconst getCurrentQuizSuccess = (payload) => {\n  return {\n    type: types.GET_CURRENT_QUIZ_SUCCESS,\n    payload,\n  };\n};\nconst getCurrentQuizFailure = (payload) => {\n  return {\n    type: types.GET_CURRENT_QUIZ_FAILURE,\n    payload,\n  };\n};\nconst getCountSuccess = (payload) => {\n  return {\n    type: types.GETCOUNTDATA,\n    payload,\n  };\n};\n\n//---------- login user ----------\n\nexport const loginUserName = (payload) => {\n  return {\n    type: types.GETUSERNAME,\n    payload,\n  };\n};\nexport const loginUser = (payload) => {\n  return {\n    type: types.GETUSERID,\n    payload,\n  };\n};\n\nexport const Logouthandleraction = (payload) => {\n  return {\n    type: types.LOGOUTUSER,\n    payload,\n  };\n};\n\nexport const loginAdminId = (payload) => {\n  return {\n    type: types.GETADMINID,\n    payload,\n  };\n};\nexport const loginAdminName = (payload) => {\n  return {\n    type: types.GETADMINNAME,\n    payload,\n  };\n};\n\n// ----------------------- action creator function for  details of user  for admin page ---------------\n\nconst getAllUserDataRequest = (payload) => {\n  return {\n    type: types.GET_ALL_USER_DATA_REQUEST,\n    payload,\n  };\n};\n\nconst getAllUserDataSuccess = (payload) => {\n  return {\n    type: types.GET_ALL_USER_DATA_SUCCESS,\n    payload,\n  };\n};\n\nconst getAllUserDataFailure = (payload) => {\n  return {\n    type: types.GET_ALL_USER_DATA_FAILURE,\n    payload,\n  };\n};\n\n// ----------------------- details of user  for admin page  and delete user by admin ---------------\n\nexport const getAllUserDataFromBackend = () => async (dispatch) => {\n  dispatch(getAllUserDataRequest());\n  try {\n    const res = await axios.get(`${API_BASE_URL}/getuser`);\n    dispatch(getAllUserDataSuccess(res.data));\n  } catch (err) {\n    dispatch(getAllUserDataFailure());\n  }\n};\n\nexport const deleteUserByAdmin = (payload) => (dispatch) => {\n  axios\n    .delete(`https://mern-quiz-server-sudhir.onrender.com/${payload}`)\n    .then((response) => {\n      dispatch(getAllUserDataFromBackend());\n    })\n    .catch((error) => {\n      console.log(\"error\");\n    });\n};\n\n// ----------post quiz--------------\n\nexport const postQuizObj = (obj) => (dispatch) => {\n  axios\n    .post(\"https://mern-quiz-server-sudhir.onrender.com/admin\", obj)\n    .then((res) => {\n     \n    })\n    .catch((err) => {\n      \n    });\n};\n\n// ----------------------------- fetching quiz data subject wise -------------\n\nconst fetchQuizRequest = (payload) => {\n  return {\n    type: types.FETCH_QUIZ_REQUEST,\n    payload,\n  };\n};\nconst fetchQuizSuccess = (payload) => {\n  return {\n    type: types.FETCH_QUIZ_SUCCESS,\n    payload,\n  };\n};\nconst fetchQuizFailure = (payload) => {\n  return {\n    type: types.FETCH_QUIZ_FAILURE,\n    payload,\n  };\n};\nexport const fetchQuizDataFrombackend = () => (dispatch) => {\n  axios\n    .get(\"https://mern-quiz-server-sudhir.onrender.com/api/quiz\")\n    .then((res) => dispatch(fetchQuizSuccess(res.data)))\n    .catch((err) => console.log(err));\n};\n\nexport const getQuiz = (params) => (dispatch) => {\n  axios\n    .get(`https://mern-quiz-server-sudhir.onrender.com/quiz/${params.id}`)\n    .then((res) => {\n    \n      dispatch(fetchQuizSuccess(res.data));\n    })\n    .catch((err) => {\n    });\n};\n\n//------------posting the user quiz result ------------\n\n//  -----------posting user result ------------\n\nexport const postUserResult = (ans) => {\n  return {\n    type: types.SET_USER_RESULT_SUCCESS,\n    payload: ans,\n  };\n};\n\n// ------action creator function and axios function =-------\n\nconst postUserResultRequest = (ans) => {\n  return {\n    type: types.POST_USER_RESULT_SUCCESS,\n    payload: ans,\n  };\n};\nconst postUserResultSuccess = (ans) => {\n  return {\n    type: types.POST_USER_RESULT_SUCCESS,\n    payload: ans,\n  };\n};\nconst postUserResultFailure = (ans) => {\n  return {\n    type: types.POST_USER_RESULT_SUCCESS,\n    payload: ans,\n  };\n};\nexport const postQuizResult = (obj) => (dispatch) => {\n  const { quizId, userId, quizResult } = obj;\n  dispatch(postUserResultRequest());\n  axios\n    .post(`https://mern-quiz-server-sudhir.onrender.com/userResult/${userId}`, obj)\n    .then((res) => {\n      dispatch(postUserResultSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(postUserResultFailure(err));\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}