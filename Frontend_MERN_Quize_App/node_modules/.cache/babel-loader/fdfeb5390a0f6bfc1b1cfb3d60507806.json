{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAGHAVENDRA\\\\Downloads\\\\MERN-Quiz-App-main\\\\MERN-Quiz-App-main\\\\Frontend_MERN_Quize_App\\\\src\\\\Pages\\\\Quizes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quizes = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Capture quiz ID from URL\n  const navigate = useNavigate(); // Use navigate for navigation\n  const userId = useSelector(state => state.mernQuize.userId); // Get user ID from Redux store\n  const userName = useSelector(state => state.mernQuize.userName); // Get user name from Redux store\n  const [quiz, setQuiz] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/quiz/${id}`);\n        console.log(\"Fetched Quiz:\", response.data); // Debugging\n        setQuiz(response.data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching quiz data\");\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  const handleOptionChange = (questionIndex, optionText) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionIndex]: optionText\n    }));\n  };\n  const handleSubmit = () => {\n    console.log(\"User ID:\", userId); // Debugging\n    console.log(\"User Name:\", userName); // Debugging\n\n    if (Object.keys(answers).length !== quiz.questions.length) {\n      alert(\"Please answer all the questions before submitting.\");\n      return;\n    }\n    setSubmitted(true);\n    navigate(\"/quiz-results\", {\n      state: {\n        quiz,\n        answers,\n        user: {\n          id: userId,\n          name: userName\n        }\n      }\n    });\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading quiz data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-4\",\n      children: [\"Difficulty: \", quiz.difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), quiz.questions && quiz.questions.length > 0 ? quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-4 bg-white shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: [index + 1, \". \", question.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-4\",\n        children: question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${index}`,\n              value: option.text,\n              checked: answers[index] === option.text,\n              onChange: () => handleOptionChange(index, option.text),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), option.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this quiz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), !submitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"mt-6 bg-teal-500 text-white px-4 py-2 rounded\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Quizes, \"eX9Tsx2oTBfhCkb0HE5iCV+Z+3M=\", false, function () {\n  return [useParams, useNavigate, useSelector, useSelector];\n});\n_c = Quizes;\nvar _c;\n$RefreshReg$(_c, \"Quizes\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","useSelector","jsxDEV","_jsxDEV","Quizes","_s","id","navigate","userId","state","mernQuize","userName","quiz","setQuiz","error","setError","answers","setAnswers","submitted","setSubmitted","fetchQuiz","response","get","console","log","data","_error$response","_error$response$data","message","handleOptionChange","questionIndex","optionText","prev","handleSubmit","Object","keys","length","questions","alert","user","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","difficulty","map","question","index","options","option","i","type","value","text","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Pages/Quizes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Quizes = () => {\r\n  const { id } = useParams(); // Capture quiz ID from URL\r\n  const navigate = useNavigate(); // Use navigate for navigation\r\n  const userId = useSelector((state) => state.mernQuize.userId); // Get user ID from Redux store\r\n  const userName = useSelector((state) => state.mernQuize.userName); // Get user name from Redux store\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/quiz/${id}`);\r\n        console.log(\"Fetched Quiz:\", response.data); // Debugging\r\n        setQuiz(response.data);\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || \"Error fetching quiz data\");\r\n      }\r\n    };\r\n\r\n    fetchQuiz();\r\n  }, [id]);\r\n\r\n  const handleOptionChange = (questionIndex, optionText) => {\r\n    setAnswers((prev) => ({\r\n      ...prev,\r\n      [questionIndex]: optionText,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"User ID:\", userId); // Debugging\r\n    console.log(\"User Name:\", userName); // Debugging\r\n\r\n    if (Object.keys(answers).length !== quiz.questions.length) {\r\n      alert(\"Please answer all the questions before submitting.\");\r\n      return;\r\n    }\r\n    setSubmitted(true);\r\n    navigate(\"/quiz-results\", { state: { quiz, answers, user: { id: userId, name: userName } } });\r\n  };\r\n\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n  if (!quiz) return <p>Loading quiz data...</p>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">{quiz.title}</h1>\r\n      <p className=\"text-gray-600 mb-4\">Difficulty: {quiz.difficulty}</p>\r\n      <h2 className=\"text-xl font-bold mb-4\">Questions:</h2>\r\n\r\n      {quiz.questions && quiz.questions.length > 0 ? (\r\n        quiz.questions.map((question, index) => (\r\n          <div key={index} className=\"mb-8 p-4 bg-white shadow-lg rounded-lg\">\r\n            <h3 className=\"text-lg font-semibold\">{index + 1}. {question.title}</h3>\r\n            <ul className=\"mt-4\">\r\n              {question.options.map((option, i) => (\r\n                <li key={i} className=\"text-gray-700\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${index}`}\r\n                      value={option.text}\r\n                      checked={answers[index] === option.text}\r\n                      onChange={() => handleOptionChange(index, option.text)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    {option.text}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No questions available for this quiz.</p>\r\n      )}\r\n\r\n      {!submitted && (\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"mt-6 bg-teal-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Submit Quiz\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}