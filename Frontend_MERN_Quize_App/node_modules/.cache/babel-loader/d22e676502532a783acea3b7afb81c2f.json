{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAGHAVENDRA\\\\Downloads\\\\MERN-Quiz-App-main\\\\MERN-Quiz-App-main\\\\Frontend_MERN_Quize_App\\\\src\\\\Components\\\\Admin\\\\QuizForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { postQuizObj } from \"../features/quiz/quizSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [quizData, setQuizData] = useState({\n    title: \"\",\n    questions: [{\n      questionText: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctAnswer: \"\"\n    }]\n  });\n  const handleChange = (index, field, value) => {\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[index][field] = value;\n    setQuizData({\n      ...quizData,\n      questions: updatedQuestions\n    });\n  };\n  const handleOptionChange = (qIndex, oIndex, value) => {\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[qIndex].options[oIndex] = value;\n    setQuizData({\n      ...quizData,\n      questions: updatedQuestions\n    });\n  };\n  const addQuestion = () => {\n    setQuizData({\n      ...quizData,\n      questions: [...quizData.questions, {\n        questionText: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctAnswer: \"\"\n      }]\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(postQuizObj(quizData));\n    alert(\"Quiz submitted successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Quiz Title\",\n      value: quizData.title,\n      onChange: e => setQuizData({\n        ...quizData,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), quizData.questions.map((q, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Question\",\n        value: q.questionText,\n        onChange: e => handleChange(qIndex, \"questionText\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), q.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Option ${oIndex + 1}`,\n        value: option,\n        onChange: e => handleOptionChange(qIndex, oIndex, e.target.value)\n      }, oIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Correct Answer\",\n        value: q.correctAnswer,\n        onChange: e => handleChange(qIndex, \"correctAnswer\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizForm, \"+qMDlDJ1xKsvuK37jm83Ku0m6xA=\", false, function () {\n  return [useDispatch];\n});\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","useDispatch","postQuizObj","jsxDEV","_jsxDEV","QuizForm","_s","dispatch","quizData","setQuizData","title","questions","questionText","options","correctAnswer","handleChange","index","field","value","updatedQuestions","handleOptionChange","qIndex","oIndex","addQuestion","handleSubmit","e","preventDefault","alert","onSubmit","children","type","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","q","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RAGHAVENDRA/Downloads/MERN-Quiz-App-main/MERN-Quiz-App-main/Frontend_MERN_Quize_App/src/Components/Admin/QuizForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { postQuizObj } from \"../features/quiz/quizSlice\";\n\nconst QuizForm = () => {\n  const dispatch = useDispatch();\n  const [quizData, setQuizData] = useState({\n    title: \"\",\n    questions: [\n      {\n        questionText: \"\",\n        options: [\"\", \"\", \"\", \"\"],\n        correctAnswer: \"\"\n      }\n    ]\n  });\n\n  const handleChange = (index, field, value) => {\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[index][field] = value;\n    setQuizData({ ...quizData, questions: updatedQuestions });\n  };\n\n  const handleOptionChange = (qIndex, oIndex, value) => {\n    const updatedQuestions = [...quizData.questions];\n    updatedQuestions[qIndex].options[oIndex] = value;\n    setQuizData({ ...quizData, questions: updatedQuestions });\n  };\n\n  const addQuestion = () => {\n    setQuizData({\n      ...quizData,\n      questions: [\n        ...quizData.questions,\n        { questionText: \"\", options: [\"\", \"\", \"\", \"\"], correctAnswer: \"\" }\n      ]\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(postQuizObj(quizData));\n    alert(\"Quiz submitted successfully!\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Quiz Title\"\n        value={quizData.title}\n        onChange={(e) => setQuizData({ ...quizData, title: e.target.value })}\n      />\n      {quizData.questions.map((q, qIndex) => (\n        <div key={qIndex}>\n          <input\n            type=\"text\"\n            placeholder=\"Question\"\n            value={q.questionText}\n            onChange={(e) => handleChange(qIndex, \"questionText\", e.target.value)}\n          />\n          {q.options.map((option, oIndex) => (\n            <input\n              key={oIndex}\n              type=\"text\"\n              placeholder={`Option ${oIndex + 1}`}\n              value={option}\n              onChange={(e) => handleOptionChange(qIndex, oIndex, e.target.value)}\n            />\n          ))}\n          <input\n            type=\"text\"\n            placeholder=\"Correct Answer\"\n            value={q.correctAnswer}\n            onChange={(e) => handleChange(qIndex, \"correctAnswer\", e.target.value)}\n          />\n        </div>\n      ))}\n      <button type=\"button\" onClick={addQuestion}>Add Question</button>\n      <button type=\"submit\">Submit Quiz</button>\n    </form>\n  );\n};\n\nexport default QuizForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}